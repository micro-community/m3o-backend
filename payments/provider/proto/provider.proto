syntax="proto3";

package go.micro.srv.provider;

service Provider {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc CreatePlan(CreatePlanRequest) returns (CreatePlanResponse);
  rpc ListPlans(ListPlansRequest) returns (ListPlansResponse);
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse);
  // UpdateSubscription is curretly used to update the quantity of a subscription.
  rpc UpdateSubscription(UpdateSubscriptionRequest) returns (UpdateSubscriptionResponse);
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse);
  rpc CreatePaymentMethod(CreatePaymentMethodRequest) returns (CreatePaymentMethodResponse);
  rpc ListPaymentMethods(ListPaymentMethodsRequest) returns (ListPaymentMethodsResponse);
  rpc SetDefaultPaymentMethod(SetDefaultPaymentMethodRequest) returns (SetDefaultPaymentMethodResponse);
  rpc DeletePaymentMethod(DeletePaymentMethodRequest) returns (DeletePaymentMethodResponse);
  // Verify a payment method token that gets generated on m3o.com/subscribe
  // Different from ListPaymentMethod etc. endpoints as the pm token does not belong
  // to any customer yet.
  rpc VerifyPaymentMethod(VerifyPaymentMethodRequest) returns (VerifyPaymentMethodResponse);
}

message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  bool active = 4;
}

message CreateProductRequest {
  Product product = 1;
}

message CreateProductResponse {}

enum PlanInterval {
  UNKNOWN = 0;
  DAY = 1;
  WEEK = 2;
  MONTH = 3;
  YEAR = 4;
}

message Plan {
  string id = 1;
  string name = 2;
  int64 amount = 3;
  string currency = 4;
  PlanInterval interval = 5;
  string product_id = 6;
}

message CreatePlanRequest {
  Plan plan = 1;
}

message CreatePlanResponse {}

message Customer {
  string id = 1;
  string type = 2;
  map<string, string> metadata = 3;
}

message CreateCustomerRequest {
  Customer customer = 1;
}

message CreateCustomerResponse {}

message CreateSubscriptionRequest {
  string customer_id = 1;
  string customer_type = 2;
  // plans and prices are mutually exclusive
  string plan_id = 3;
  string price_id = 4;
  // price quantity
  int64 quantity = 5;
}

message CreateSubscriptionResponse {
  Subscription subscription = 1;
}

message UpdateSubscriptionRequest {
  string subscription_id = 1;
  string customer_id = 2;
  string customer_type = 3;
  string plan_id = 4;
  string price_id = 5;
  int64 quantity = 6;
}

message UpdateSubscriptionResponse{}

message ListSubscriptionsRequest {
  string customer_id = 1;
  string customer_type = 2;
  string plan_id = 3;
  string price_id = 4;
}

message Subscription {
  string id = 1;
  Plan plan = 2;
  Product product = 3;
  int64 quantity = 4;
}

message ListSubscriptionsResponse {
  repeated Subscription subscriptions = 1;
}

message PaymentMethod {
  string id = 1;
  int64 created = 2;
  string customer_id = 3;
  string customer_type = 4;
  string type = 5;
  string card_brand = 6;
  string card_exp_month = 7;
  string card_exp_year = 8;
  string card_last_4 = 9;
  bool default = 10;
}

message CreatePaymentMethodRequest {
  string id = 1;
  string customer_id = 2;
  string customer_type = 3;
}

message ListPaymentMethodsRequest {
  string customer_id = 1;
  string customer_type = 2;
}

message DeletePaymentMethodRequest {
  string id = 1;
}

message CreatePaymentMethodResponse {
  PaymentMethod payment_method = 1;
}

message ListPaymentMethodsResponse {
  repeated PaymentMethod payment_methods = 1;
}

message DeletePaymentMethodResponse {}

message SetDefaultPaymentMethodRequest {
  string customer_id = 1;
  string customer_type = 2;
  string payment_method_id = 3;
}

message SetDefaultPaymentMethodResponse {
}

message ListPlansRequest {
  string product_id = 1;
}

message ListPlansResponse {
  repeated Plan plans = 1;
}

message VerifyPaymentMethodRequest {
  string payment_method = 1;
}

message VerifyPaymentMethodResponse{}