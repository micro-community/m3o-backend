syntax = "proto3";

package stripe;

option go_package = "./proto;stripe";

service Stripe {
	rpc CreateCheckoutSession(CreateCheckoutSessionRequest) returns (CreateCheckoutSessionResponse);
	rpc ListCards(ListCardsRequest) returns (ListCardsResponse);
	rpc ChargeCard(ChargeCardRequest) returns (ChargeCardResponse);
	rpc DeleteCard(DeleteCardRequest) returns (DeleteCardResponse);
	rpc ListPayments(ListPaymentsRequest) returns (ListPaymentsResponse);
	rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse);
	rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
	rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
	rpc SetupCard(SetupCardRequest) returns (SetupCardResponse);
}

message CreateCheckoutSessionRequest {
	int64 amount = 1;
	bool save_card = 2;
}

message CreateCheckoutSessionResponse {
	string id = 1;
}

message ListCardsRequest {
}

message ListCardsResponse {
	repeated Card cards = 1;
}

message Card {
	string id = 1;
	string last_four = 2;
	string expires = 3;
}

message ChargeCardRequest {
	string id = 1;
	int64 amount = 2;
}

message ChargeCardResponse {
	string client_secret = 1;
}

message DeleteCardRequest {
	string id = 1;
}

message DeleteCardResponse {}

message ListPaymentsRequest {}

message Payment {
	string id = 1;
	int64 amount = 2;
	string currency = 3;
	int64 date = 4;
	string receipt_url = 5;
	string description = 6;
}

message ListPaymentsResponse {
	repeated Payment payments = 1;
}

message GetPaymentRequest {
	string id = 1;
}

message GetPaymentResponse {
	Payment payment = 1;
}

message SubscribeRequest {
	string price_id = 1;
	string card_id = 2;
}

message SubscribeResponse {
	string subscription_id = 1;
}

message UnsubscribeRequest {
	string subscription_id = 1;
}

message UnsubscribeResponse {
}

message SetupCardRequest {}

message SetupCardResponse {
	string client_secret = 1;
}
