syntax = "proto3";

package publicapi;

option go_package = "./proto;publicapi";

import "proto/publicapi.proto";

service Explore {
	rpc Index(IndexRequest) returns (IndexResponse) {}
	rpc Search(SearchRequest) returns (SearchResponse) {}
	rpc API(APIRequest) returns (APIResponse) {}
	rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse) {}
	rpc Pricing(PricingRequest) returns (PricingResponse) {}
}

// ExploreAPI is returned for index/search endpoints
message ExploreAPI {
	string name = 1;
	string description = 2;
	string category = 3;
	string icon = 4;
	repeated Endpoint endpoints = 5;
	string display_name = 6;
}

// Endpoint is a simple named api endpoint
message Endpoint {
	// name of the endpoint e.g Cache.Get
	string name = 1;
}

message IndexRequest {
	int64 limit = 1;
	int64 offset = 2;
}

message IndexResponse {
	repeated ExploreAPI apis = 1;
}

message SearchRequest {
	string search_term = 1;
	string category = 2; // deperecated
	repeated string categories = 3;
}

message SearchResponse {
	repeated ExploreAPI apis = 1;
}

message APIRequest {
	string name = 1;
}

message APIResponse {
	ExploreAPI summary = 1;
	PublicAPI api = 2;
}

message ListCategoriesRequest {}

message ListCategoriesResponse {
	repeated string categories = 1;
}

message PricingRequest {
}

message PricingItem {
	string name = 1;
	string id = 2;
	map<string, int64> pricing = 3; // map of endpoints to price. Unit is 1/10,000ths of a cent which allows us to price in fractions e.g. a request costs 0.0001 cents or 10000 requests for 1 cent
	string display_name = 4;
	string icon = 5;
	map<string, int64> quotas = 6; // map of endpoints to free quota. After quota is exhausted endpoint becomes paid
}

message PricingResponse {
	repeated PricingItem prices = 1;
}
