name: Build

on: 
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Detect which services changed
        id: services_changed
        uses: micro/actions@1.1.1
        continue-on-error: true
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Started Webhook
        if: github.ref == 'refs/heads/master'
        run: |
          ./event.sh "build.started" "${GITHUB_RUN_ID}"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Setup go-mod cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomods-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomods-
      - name: Setup dumb init
        run: |
          git clone https://github.com/Yelp/dumb-init.git
          cd dumb-init
          make build
          cd ..
      - name: Build and push docker images
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          BRANCH: ${{ github.ref }}
        run: |
          # Login to docker
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin docker.pkg.github.com
          
          if [ -z "${{ steps.services_changed.outputs.services_added }}" ] && [ -z "${{ steps.services_changed.outputs.services_modified }}" ]; then
            ./build.sh
          else 
            # Build the binaries in the directories which have changed
            if [ -n "${{ steps.services_changed.outputs.services_added }}" ]; then
              ./build.sh "${{ steps.services_changed.outputs.services_added }}"
            fi
            if [ -n "${{ steps.services_changed.outputs.services_modified }}" ]; then
              ./build.sh "${{ steps.services_changed.outputs.services_modified }}"
            fi
          fi
      - name: Build Finished Webhook
        if: github.ref == 'refs/heads/master'
        run: |
          ./event.sh "build.finished" "${GITHUB_RUN_ID}"
      - name: Build Failed Webhook
        if: failure() && github.ref == 'refs/heads/master'
        run: |
          ./event.sh "build.failed" "${GITHUB_RUN_ID}"