syntax = "proto3";

package go.micro.service.notifications;

service Notifications {
	rpc Subscribe(SubscribeRequest) returns (SubscribeResponse) {}
	rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse) {}
	rpc MarkAsRead(MarkAsReadRequest) returns (MarkAsReadResponse) {}
	rpc Notify(NotifyRequest) returns (NotifyResponse) {}
	rpc List(ListRequest) returns (ListResponse) {}
	rpc ListSubscriptions(ListSubscribptionsRequest) returns (ListSubscriptionsResponse) {} 
}

message SubscribeRequest {
	string resource_id = 1;
	string resource_type = 2;
}

message SubscribeResponse {
}

message UnsubscribeRequest {
	string resource_id = 1;
	string resource_type = 2;
}

message UnsubscribeResponse {

}

message MarkAsReadRequest {
	repeated string ids = 1;
}

message MarkAsReadResponse {
}

message NotifyRequest {
	string resource_id = 1;
	string resource_type = 2;
	string message = 3;
}

message NotifyResponse {
}

message ListRequest {
}

message ListResponse {
	repeated Notification notifications = 1;
}

message Notification {
	string id = 1; 
	string message = 2;
	string resource_id = 3;
	string resource_type = 4;
	int64 timestamp = 5;
	int64 read_timestamp = 6;
}

message ListSubscribptionsRequest {

}

message ListSubscriptionsResponse {
	repeated Subscription subscriptions = 1;
}

message Subscription {
	string id = 1;
	string resource_id = 2;
	string resource_type = 3;
}


message Event {
	string type = 1;
	bytes payload = 2;
}